[
    {
        "title": "Course Analytics",
        "tags": [
            "TypeScript",
            "Next.js",
            "React",
            "Chakra UI",
            "MongoDB",
            "Google Sheets API",
            "Node.js"
        ],
        "description": "Course Analytics was developed for students of Oregon State University's Computer Science program. It provides aggregated data and tips to help students understand course difficulties, time commitments, and common course pairings. The data is crowdsourced from real student course reviews.",
        "link": "/portfolio/course-analytics",
        "imageSrc": "/images/portfolio/Course-Analytics-Course.png"
    },
    {
        "title": "Boeing Speckle",
        "tags": ["JavaScript", "React", "MongoDB", "Express", "Node.js"],
        "description": "Boeing Speckle is an API that scrapes data from BAC specifications publicly available on the Boeing D1-4426 website for companies in the Boeing supply chain. Boeing Speckle allows users to query Boeing specifications by their document number and return related information including the document title, revision level, and revision date. The API is available as a GUI or by making API calls to return a JSON response.",
        "link": "/portfolio/boeing-speckle",
        "imageSrc": "/images/portfolio/Boeing-Speckle.jpg"
    },
    {
        "title": "Commercial Space Flight Tracker",
        "tags": [
            "JavaScript",
            "Express",
            "Node.js",
            "mySQL",
            "React",
            "Chakra UI"
        ],
        "description": "Commercial Space Flight Tracker is a database management system (DBMS) admin portal. The project is intended for administrators of a fictional website and allows access to change entries in a real mySQL database using a custom-built GUI. The project also features an API for performing CRUD operations using HTTP requests.",
        "link": "/portfolio/commercial-space-flight-tracker",
        "imageSrc": "/images/portfolio/Commercial-Space-Flight-Tracker.png"
    },
    {
        "title": "small shell",
        "tags": ["C", "Shell Scripting"],
        "description": "A miniature version of a Unix shell written in C, small shell provides users with an interface to the Unix system. It gathers input and executes programs based on that input. When a program finishes executing, it displays that program's output. This program was developed as part of an assignment for Oregon State University's CS 344 Operating Systems course.",
        "link": "/portfolio/small-shell",
        "imageSrc": "/images/portfolio/Small-Shell.png"
    },
    {
        "title": "MockData U.",
        "tags": [
            "JavaScript",
            "React",
            "Next.js",
            "Chakra UI",
            "Node.js",
            "Faker.js"
        ],
        "description": "MockData U. is a website that allows users to mock fake but realistic data related to a college or university. The project is intended for software developers and UI designers of educational software. It allows users to generate data for one or more students, classes, or universities using an API or a GUI.",
        "link": "/portfolio/mockdata-u",
        "imageSrc": "/images/portfolio/Mockdata-U-Homepage.png"
    },
    {
        "title": "String Primitives",
        "tags": ["x86 Assembly", "MASM"],
        "description": "This is the final project for a course on computer architecture and assembly language. It was programmed using x86 Microsoft Macro Assembler (MASM). The project allows the user to input 10 strings comprised only of digits and optionally a sign (+ or -). The user input is validated and then converted to integer type. All 10 numbers are summed together, converted to a string, and then printed to the user.",
        "link": "/portfolio/string-primitives",
        "imageSrc": "/images/portfolio/String-Primitives.png"
    },
    {
        "title": "Pie Chart Microservice",
        "tags": ["JavaScript", "Next.js", "Node.js", "Node-canvas", "AWS S3"],
        "description": "A microservice API that creates an image of a pie chart from user-submitted data. Users submit data via an HTTP POST request and the API returns a JSON response with an image URL of the pie chart that was created from their request.",
        "link": "/portfolio/pie-chart-microservice",
        "imageSrc": "/images/portfolio/Pie-Chart.png"
    },
    {
        "title": "Fource",
        "tags": ["JavaScript", "Express", "Node.js", "Socket.io"],
        "description": "Fource is an abstract strategy game based around realtime gameplay. The objective is to connect four of your pieces vertically or horizontally on the board. When pieces are placed on the board, a force is acted upon them. Pieces of the same color are pulled toward the placed piece and pieces of the opposite color are pushed away. Users play (or spectate!) over the internet and may chat during play.",
        "link": "/portfolio/fource",
        "imageSrc": "/images/portfolio/Fource.png"
    }
]
